#I used Spotify Data from Kaggle for this project.

#Creating the table:
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)


#Then I inserted the Spotify Data .csv file into the table.

#Next, I explored the data using the following SQL.

#I determined the avg popularity, danceability, and valence by artist and track.
SELECT
artist_name
,track_name
,avg(popularity)
,avg(valence)
FROM BIT_DB.spotifydata
GROUP BY artist_name, track_name

#Then, I determined which artists had the most songs in the top 50.
SELECT 
distinct artist_name
, count(id) as total_songs 
FROM BIT_DB.spotifydata
GROUP BY artist_name
ORDER BY total_songs desc
LIMIT 5

#Next I used a CTE to find the average popularity for each artisit.
WITH tempTable AS (
    SELECT
    artist_name, avg(popularity)
    FROM BIT_DV.spotifydata
    GROUP BY artist_name
)    

#Using the CTE, I found every artist with an average popularity of 90 or above, showed their name, their average popularity, and labeled them as a "Top Star".

SELECT 
artist_name 
,avg(popularity)
,'Top Star" AS tag
FROM tempTable
WHERE avg(popularity) >= 0.9

